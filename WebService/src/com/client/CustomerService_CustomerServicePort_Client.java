package com.client;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;

import javax.xml.datatype.DatatypeConfigurationException;
import javax.xml.datatype.DatatypeFactory;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.namespace.QName;

import org.apache.cxf.endpoint.Client;
import org.apache.cxf.frontend.ClientProxy;
import org.apache.cxf.interceptor.LoggingInInterceptor;
import org.apache.cxf.interceptor.LoggingOutInterceptor;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.generated.Customer;
import com.generated.CustomerService;
import com.generated.CustomerServiceService;
import com.generated.CustomerType;
import com.generated.NoSuchCustomerException;

/**
 * This class was generated by Apache CXF 3.1.1 2015-07-02T14:55:43.959+05:30
 * Generated source version: 3.1.1
 * 
 */
public final class CustomerService_CustomerServicePort_Client {

	private static Logger logger = LoggerFactory
			.getLogger(org.apache.cxf.service.ServiceImpl.class);

	private static final QName SERVICE_NAME = new QName(
			"http://customerservice.example.com/", "CustomerServiceService");

	private static URL wsdlURL = CustomerServiceService.WSDL_LOCATION;
	private static CustomerServiceService ss = new CustomerServiceService(
			wsdlURL, SERVICE_NAME);

	private static CustomerService port = ss.getCustomerServicePort();

	private CustomerService_CustomerServicePort_Client() {

	}

	static {
		// create the service
		Client client = ClientProxy.getClient(port);
		client.getInInterceptors().add(new LoggingInInterceptor());
		client.getOutInterceptors().add(new LoggingOutInterceptor());
	}

	public static void main(String args[]) throws java.lang.Exception {

		if (args.length > 0 && args[0] != null && !"".equals(args[0])) {
			File wsdlFile = new File(args[0]);
			try {
				if (wsdlFile.exists()) {
					wsdlURL = wsdlFile.toURI().toURL();
				} else {
					wsdlURL = new URL(args[0]);
				}
			} catch (MalformedURLException e) {
				e.printStackTrace();
			}
		} else {
			wsdlURL = CustomerServiceService.WSDL_LOCATION;
		}

		getCustomers("Dinesh");
		updateCustomer(new Customer());
		System.exit(0);
	}

	public static List<com.generated.Customer> getCustomers(
			String _getCustomersByName_name) {
		logger.debug("Invoking getCustomersByName...");

		java.util.List<com.generated.Customer> _getCustomersByName__return = null;
		try {
			_getCustomersByName__return = port
					.getCustomersByName(_getCustomersByName_name);
			logger.debug("getCustomersByName.result="
					+ _getCustomersByName__return);

		} catch (NoSuchCustomerException e) {
			System.out
					.println("Expected exception: NoSuchCustomerException has occurred.");
			logger.debug(e.toString());
		}
		return _getCustomersByName__return;
	}

	public static void updateCustomer(
			com.generated.Customer _updateCustomer_customer) {
		_updateCustomer_customer.setCustomerId(12345);
		_updateCustomer_customer.setName("Dinesh");
		_updateCustomer_customer.setNumOrders(45);
		_updateCustomer_customer.setType(CustomerType.PRIVATE);

		final DateFormat format = new SimpleDateFormat("E. M/d");
		final String dateStr = "Thu. 03/01";
		Date date;
		try {
			date = format.parse(dateStr);
			GregorianCalendar gregory = new GregorianCalendar();
			gregory.setTime(date);

			XMLGregorianCalendar calendar = DatatypeFactory.newInstance()
					.newXMLGregorianCalendar(gregory);

			_updateCustomer_customer.setBirthDate(calendar);

		} catch (ParseException | DatatypeConfigurationException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		logger.debug("Invoking updateCustomer...");
		port.updateCustomer(_updateCustomer_customer);
	}
}
